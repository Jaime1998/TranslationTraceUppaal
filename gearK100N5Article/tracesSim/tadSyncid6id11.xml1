state
( Process.Gear Template0.Gear ) 
[ GCTimer=0 #time=0 ]

delay 0.10285352590179921983271071894706

state
( Process.Gear Template0.Gear ) 
[ GCTimer=0.10285352590179921983271071894706 #time=0.10285352590179921983271071894706 ]

transition
Template0.Gear->Template0.Initiate { 1, _ReqNewGear!, 1 }
Process.Gear->Process.Initiate { 1, _ReqNewGear?, 1 }

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=0.10285352590179921983271071894706 #time=0.10285352590179921983271071894706 ]

delay 0.18690574204222745735570754277433

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=0.28975926794402667718841826172138 #time=0.28975926794402667718841826172138 ]

transition
Process.Initiate->Process.ReqSyncSpeed { 1, _void!, 1 }
Template0.Initiate->Template0.ReqSyncSpeed { 1, _void?, 1 }

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=0.28975926794402667718841826172138 #time=0.28975926794402667718841826172138 ]

delay 0.029075083575403622149213589409555

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=0.31883435151943029239873794722371 #time=0.31883435151943029239873794722371 ]

transition
Process.ReqSyncSpeed->Process.CheckSyncSpeed { 1, _ReqSpeed!, GCTimer := 0 }
Template0.ReqSyncSpeed->Template0.CheckSyncSpeed { 1, _ReqSpeed?, GCTimer := 0 }

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=0 #time=0.31883435151943029239873794722371 ]

delay 150.95492996042594313621520996094

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=150.95492996042594313621520996094 #time=151.27376431194537076407868880779 ]

transition
Process.CheckSyncSpeed->Process.CheckClutch { GCTimer >= 150, _OpenClutch!, GCTimer := 0 }
Template0.CheckSyncSpeed->Template0.CheckClutch { 1, _OpenClutch?, GCTimer := 0 }

state
( Process.CheckClutch Template0.CheckClutch ) 
[ GCTimer=0 #time=151.27376431194537076407868880779 ]

[2K -- Formula is satisfied.
1:
[0]: (0,1) (151.2737643119454,1)
