state
( Process.Gear Template0.Gear ) 
[ GCTimer=0 #time=0 ]

delay 0.36226053698215571197138729075959

state
( Process.Gear Template0.Gear ) 
[ GCTimer=0.36226053698215571197138729075959 #time=0.36226053698215571197138729075959 ]

transition
Template0.Gear->Template0.Initiate { 1, _ReqNewGear!, 1 }
Process.Gear->Process.Initiate { 1, _ReqNewGear?, 1 }

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=0.36226053698215571197138729075959 #time=0.36226053698215571197138729075959 ]

delay 0.98456795229895088805704972401145

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=1.3468284892811066555395882460289 #time=1.3468284892811066555395882460289 ]

transition
Process.Initiate->Process.ReqSyncSpeed { 1, _void!, 1 }
Template0.Initiate->Template0.ReqSyncSpeed { 1, _void?, 1 }

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=1.3468284892811066555395882460289 #time=1.3468284892811066555395882460289 ]

delay 0.053347439891757365837410276299124

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=1.400175929172863931171377771534 #time=1.400175929172863931171377771534 ]

transition
Process.ReqSyncSpeed->Process.CheckSyncSpeed { 1, _ReqSpeed!, GCTimer := 0 }
Template0.ReqSyncSpeed->Template0.CheckSyncSpeed { 1, _ReqSpeed?, GCTimer := 0 }

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=0 #time=1.400175929172863931171377771534 ]

delay 150.03055517561733722686767578125

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=150.03055517561733722686767578125 #time=151.43073110479019760532537475228 ]

transition
Process.CheckSyncSpeed->Process.CheckClutch { GCTimer >= 150, _OpenClutch!, GCTimer := 0 }
Template0.CheckSyncSpeed->Template0.CheckClutch { 1, _OpenClutch?, GCTimer := 0 }

state
( Process.CheckClutch Template0.CheckClutch ) 
[ GCTimer=0 #time=151.43073110479019760532537475228 ]

[2K -- Formula is satisfied.
1:
[0]: (0,1) (151.4307311047902,1)
