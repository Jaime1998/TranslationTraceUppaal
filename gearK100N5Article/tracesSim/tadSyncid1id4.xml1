state
( Process.Gear Template0.Gear ) 
[ GCTimer=0 #time=0 ]

delay 1.497700044264509422475839528488

state
( Process.Gear Template0.Gear ) 
[ GCTimer=1.497700044264509422475839528488 #time=1.497700044264509422475839528488 ]

transition
Template0.Gear->Template0.Initiate { 1, _ReqNewGear!, 1 }
Process.Gear->Process.Initiate { 1, _ReqNewGear?, 1 }

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=1.497700044264509422475839528488 #time=1.497700044264509422475839528488 ]

delay 0.83081731085084020715925134936697

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=2.3285173551153497406573933403706 #time=2.3285173551153497406573933403706 ]

transition
Process.Initiate->Process.ReqSyncSpeed { 1, _void!, 1 }
Template0.Initiate->Template0.ReqSyncSpeed { 1, _void?, 1 }

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=2.3285173551153497406573933403706 #time=2.3285173551153497406573933403706 ]

delay 0.036362232197194227500958163545874

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=2.3648795873125441069362295820611 #time=2.3648795873125441069362295820611 ]

transition
Process.ReqSyncSpeed->Process.CheckSyncSpeed { 1, _ReqSpeed!, GCTimer := 0 }
Template0.ReqSyncSpeed->Template0.CheckSyncSpeed { 1, _ReqSpeed?, GCTimer := 0 }

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=0 #time=2.3648795873125441069362295820611 ]

delay 151.13392478902824223041534423828

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=151.13392478902824223041534423828 #time=153.49880437634078589326236397028 ]

transition
Process.CheckSyncSpeed->Process.CheckClutch { GCTimer >= 150, _OpenClutch!, GCTimer := 0 }
Template0.CheckSyncSpeed->Template0.CheckClutch { 1, _OpenClutch?, GCTimer := 0 }

state
( Process.CheckClutch Template0.CheckClutch ) 
[ GCTimer=0 #time=153.49880437634078589326236397028 ]

[2K -- Formula is satisfied.
1:
[0]: (0,1) (153.4988043763408,1)
