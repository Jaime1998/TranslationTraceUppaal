state
( Process.Gear Template0.Gear ) 
[ GCTimer=0 #time=0 ]

delay 0.48167232049209535160727568836592

state
( Process.Gear Template0.Gear ) 
[ GCTimer=0.48167232049209535160727568836592 #time=0.48167232049209535160727568836592 ]

transition
Template0.Gear->Template0.Initiate { 1, _ReqNewGear!, 1 }
Process.Gear->Process.Initiate { 1, _ReqNewGear?, 1 }

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=0.48167232049209535160727568836592 #time=0.48167232049209535160727568836592 ]

delay 0.16283092915938135458731039761915

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=0.64450324965147665068343485472724 #time=0.64450324965147665068343485472724 ]

transition
Process.Initiate->Process.ReqSyncSpeed { 1, _void!, 1 }
Template0.Initiate->Template0.ReqSyncSpeed { 1, _void?, 1 }

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=0.64450324965147665068343485472724 #time=0.64450324965147665068343485472724 ]

delay 1.6100472114071149309921793246758

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=2.2545504610585913596310092543717 #time=2.2545504610585913596310092543717 ]

transition
Process.ReqSyncSpeed->Process.CheckSyncSpeed { 1, _ReqSpeed!, GCTimer := 0 }
Template0.ReqSyncSpeed->Template0.CheckSyncSpeed { 1, _ReqSpeed?, GCTimer := 0 }

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=0 #time=2.2545504610585913596310092543717 ]

delay 150.67920006229542195796966552734

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=150.67920006229542195796966552734 #time=152.93375052335400710035173688084 ]

transition
Process.CheckSyncSpeed->Process.CheckClutch { GCTimer >= 150, _OpenClutch!, GCTimer := 0 }
Template0.CheckSyncSpeed->Template0.CheckClutch { 1, _OpenClutch?, GCTimer := 0 }

state
( Process.CheckClutch Template0.CheckClutch ) 
[ GCTimer=0 #time=152.93375052335400710035173688084 ]

[2K -- Formula is satisfied.
1:
[0]: (0,1) (152.933750523354,1)
