state
( Process.Gear Template0.Gear ) 
[ GCTimer=0 #time=0 ]

delay 0.76890405280365703433176349790301

state
( Process.Gear Template0.Gear ) 
[ GCTimer=0.76890405280365703433176349790301 #time=0.76890405280365703433176349790301 ]

transition
Template0.Gear->Template0.Initiate { 1, _ReqNewGear!, 1 }
Process.Gear->Process.Initiate { 1, _ReqNewGear?, 1 }

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=0.76890405280365703433176349790301 #time=0.76890405280365703433176349790301 ]

delay 0.40378639664533783060207383641682

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=1.1726904494489949204449885655777 #time=1.1726904494489949204449885655777 ]

transition
Process.Initiate->Process.ReqSyncSpeed { 1, _void!, 1 }
Template0.Initiate->Template0.ReqSyncSpeed { 1, _void?, 1 }

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=1.1726904494489949204449885655777 #time=1.1726904494489949204449885655777 ]

delay 0.064132568575383519515753505402245

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=1.2368230180243784399607420709799 #time=1.2368230180243784399607420709799 ]

transition
Process.ReqSyncSpeed->Process.CheckSyncSpeed { 1, _ReqSpeed!, GCTimer := 0 }
Template0.ReqSyncSpeed->Template0.CheckSyncSpeed { 1, _ReqSpeed?, GCTimer := 0 }

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=0 #time=1.2368230180243784399607420709799 ]

delay 150.62988224206492304801940917969

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=150.62988224206492304801940917969 #time=151.86670526008930437456001527607 ]

transition
Process.CheckSyncSpeed->Process.CheckClutch { GCTimer >= 150, _OpenClutch!, GCTimer := 0 }
Template0.CheckSyncSpeed->Template0.CheckClutch { 1, _OpenClutch?, GCTimer := 0 }

state
( Process.CheckClutch Template0.CheckClutch ) 
[ GCTimer=0 #time=151.86670526008930437456001527607 ]

[2K -- Formula is satisfied.
1:
[0]: (0,1) (151.8667052600893,1)
