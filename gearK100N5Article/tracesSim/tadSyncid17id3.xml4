state
( Process.Gear Template0.Gear ) 
[ GCTimer=0 #time=0 ]

delay 0.11004856836085172289152467328677

state
( Process.Gear Template0.Gear ) 
[ GCTimer=0.11004856836085172289152467328677 #time=0.11004856836085172289152467328677 ]

transition
Template0.Gear->Template0.Initiate { 1, _ReqNewGear!, 1 }
Process.Gear->Process.Initiate { 1, _ReqNewGear?, 1 }

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=0.11004856836085172289152467328677 #time=0.11004856836085172289152467328677 ]

delay 0.5040506355676709349111774827179

state
( Process.Initiate Template0.Initiate ) 
[ GCTimer=0.61409920392852268555827777163358 #time=0.61409920392852268555827777163358 ]

transition
Process.Initiate->Process.ReqSyncSpeed { 1, _void!, 1 }
Template0.Initiate->Template0.ReqSyncSpeed { 1, _void?, 1 }

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=0.61409920392852268555827777163358 #time=0.61409920392852268555827777163358 ]

delay 0.69265726762430279705995417316444

state
( Process.ReqSyncSpeed Template0.ReqSyncSpeed ) 
[ GCTimer=1.306756471552825482618231944798 #time=1.306756471552825482618231944798 ]

transition
Process.ReqSyncSpeed->Process.CheckSyncSpeed { 1, _ReqSpeed!, GCTimer := 0 }
Template0.ReqSyncSpeed->Template0.CheckSyncSpeed { 1, _ReqSpeed?, GCTimer := 0 }

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=0 #time=1.306756471552825482618231944798 ]

delay 150.26177404215559363365173339844

state
( Process.CheckSyncSpeed Template0.CheckSyncSpeed ) 
[ GCTimer=150.26177404215559363365173339844 #time=151.56853051370842422329587861896 ]

transition
Process.CheckSyncSpeed->Process.CheckClutch { GCTimer >= 150, _OpenClutch!, GCTimer := 0 }
Template0.CheckSyncSpeed->Template0.CheckClutch { 1, _OpenClutch?, GCTimer := 0 }

state
( Process.CheckClutch Template0.CheckClutch ) 
[ GCTimer=0 #time=151.56853051370842422329587861896 ]

[2K -- Formula is satisfied.
1:
[0]: (0,1) (151.5685305137084,1)
